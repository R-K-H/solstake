{"mappings":"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","sources":["node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","node_modules/@ledgerhq/devices/src/hid-framing.ts","node_modules/@ledgerhq/devices/src/index.ts","node_modules/@ledgerhq/devices/node_modules/semver/index.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","node_modules/lru-cache/index.js","node_modules/yallist/yallist.js","node_modules/yallist/iterator.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","node_modules/@ledgerhq/logs/src/index.ts"],"sourcesContent":["import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano SP\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1533 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        // this is the legacy one (prototype version). we will eventually drop it.\n        serviceUuid: \"d973f2e0-b19e-11e2-9e96-0800200c9a66\",\n        notifyUuid: \"d973f2e1-b19e-11e2-9e96-0800200c9a66\",\n        writeUuid: \"d973f2e2-b19e-11e2-9e96-0800200c9a66\",\n        writeCmdUuid: \"d973f2e3-b19e-11e2-9e96-0800200c9a66\",\n      },\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano X\": DeviceModelId.nanoX,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  let productId = productMap[productName];\n  if (!productId && productName.startsWith(\"Nano S\")) {\n    productId = DeviceModelId.nanoSP;\n  }\n  const deviceModel = devicesList.find((d) => d.id === productId);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","/**\n * A Log object\n */\nexport interface Log {\n  type: string;\n  message?: string;\n  data?: any;\n  // unique amount all logs\n  id: string;\n  // date of the log\n  date: Date;\n}\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n"],"names":["$83996ee5a959de53$var$ledgerDevices","vendorId","$7KQ2U","ledgerUSBVendorId","$83996ee5a959de53$var$isSupported","Promise","resolve","window","navigator","hid","$83996ee5a959de53$var$getHID","$aO9do","TransportError","$83996ee5a959de53$var$requestLedgerDevices","requestDevice","filters","device","_a","sent","Array","isArray","$83996ee5a959de53$var$getLedgerDevices","getDevices","filter","d","$83996ee5a959de53$export$2e2bcd8739ae039","_super","TransportWebHID","_this1","call","this","channel","Math","floor","random","packetSize","inputs","read","length","shift","success","inputCallback","onInputReport","e","buffer","$83996ee5a959de53$require$Buffer","from","data","push","_disconnectEmitted","_emitDisconnect","emit","exchange","apdu","$83996ee5a959de53$var$__awaiter","exchangeAtomicImpl","_this","$6u04C","log","toString","framing","$aiT2R","default","blocks","makeBlocks","i","sendReport","_b","result","getReducedResult","acc","reduceResponse","message","includes","DisconnectedDeviceDuringOperation","_a1","deviceModel","productId","identifyUSBProductId","undefined","addEventListener","$83996ee5a959de53$var$__extends","request","$83996ee5a959de53$var$__read","apply","open","openConnected","devices","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","exchangeBusyPromise","setScrambleKey","isSupported","list","listen","observer","unsubscribed","existingDevices","$83996ee5a959de53$var$getFirstLedgerDevice","then","next","type","descriptor","complete","error","TransportOpenUserCancelled","unsubscribe","$8IizQ","$780648a3e1e763bb$export$2e2bcd8739ae039","$780648a3e1e763bb$var$initialAcc","$780648a3e1e763bb$require$Buffer","alloc","dataLength","sequence","value","b","concat","writeUInt16BE","blockSize","nbBlocks","ceil","fill","head","writeUInt8","chunk","slice","readUInt16BE","readUInt8","chunkData","$5a55338640b81cb6$export$b8d24b2c0d9c5549","$5a55338640b81cb6$var$devices","$5a55338640b81cb6$var$_a","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","$parcel$interopDefault","$aQuNX","lt","coerce","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","$5a55338640b81cb6$var$devicesList","Object","values","$5a55338640b81cb6$export$268c42a4ddec87f3","$5a55338640b81cb6$export$df8f4444a7c73154","usbProductId","legacy","find","mm","$5a55338640b81cb6$var$bluetoothServices","$5a55338640b81cb6$var$serviceUuidToInfos","$5a55338640b81cb6$var$id","$5a55338640b81cb6$var$deviceModel","$5a55338640b81cb6$var$bluetoothSpec","$5a55338640b81cb6$var$i","$5a55338640b81cb6$var$spec","replace","$5a55338640b81cb6$var$__assign","module","exports","re","$2YsFY","src","tokens","t","SEMVER_SPEC_VERSION","parcelRequire","SemVer","compareIdentifiers","rcompareIdentifiers","parse","valid","clean","inc","diff","major","minor","patch","prerelease","compare","rcompare","compareLoose","compareBuild","sort","rsort","gt","eq","neq","gte","lte","cmp","Comparator","Range","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","intersects","simplifyRange","subset","MAX_SAFE_COMPONENT_LENGTH","R","createToken","name","isGlobal","index","$k6Bbq","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","$22a76dcc2551fd1a$require$MAX_SAFE_COMPONENT_LENGTH","COERCE","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","$766a73ad6ef1f07e$var$MAX_SAFE_INTEGER","Number","MAX_SAFE_INTEGER","$ea3135fc0e3875cd$var$debug","$6nfjE","env","$aak82","MAX_LENGTH","$cfd5562632bd698a$var$SemVer","format","version","join","other","options","compareMain","comparePre","$cfd5562632bd698a$require$compareIdentifiers","a","build","release","identifier","isNaN","Error","raw","$a9HWT","loose","includePrerelease","TypeError","$cfd5562632bd698a$require$MAX_LENGTH","m","trim","match","$cfd5562632bd698a$require$re","$cfd5562632bd698a$require$t","LOOSE","FULL","$cfd5562632bd698a$require$MAX_SAFE_INTEGER","split","map","test","num","$764cd5f7b0b6f138$var$opts","options1","k","reduce","$7850122e1382b3b5$var$numeric","$7850122e1382b3b5$var$compareIdentifiers","anum","bnum","$hQi6x","$388d1c754f73ee1f$require$MAX_LENGTH","$388d1c754f73ee1f$require$re","$388d1c754f73ee1f$require$t","er","v","$4R1hV","s","version1","version2","$auQkf","v1","v2","hasPre","prefix","defaultResult","key","$1fvpg","parsed","versionA","versionB","$3uOKI","op","$asq00","$e5Toi","$jWYEZ","$bW9yV","$f6HAz","String","rtl","$55e2a5c901f6a283$require$re","$55e2a5c901f6a283$require$t","COERCERTL","exec","lastIndex","$89a741bbb0558613$var$ANY","Symbol","$89a741bbb0558613$var$Comparator","ANY","comp","r","$89a741bbb0558613$require$re","$89a741bbb0558613$require$t","COMPARATORLOOSE","COMPARATOR","operator","semver","$5JJOI","$lxo83","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","$fadf6587fda574a5$var$Range","range","set","comps","parseRange","memoKey","keys","cached","$fadf6587fda574a5$var$cache","get","hr","$fadf6587fda574a5$require$re","$fadf6587fda574a5$require$t","HYPHENRANGELOOSE","HYPHENRANGE","$fadf6587fda574a5$var$hyphenReplace","COMPARATORTRIM","$fadf6587fda574a5$require$comparatorTrimReplace","TILDETRIM","$fadf6587fda574a5$require$tildeTrimReplace","CARETTRIM","$fadf6587fda574a5$require$caretTrimReplace","compRe","rangeList","$fadf6587fda574a5$var$parseComparator","$fadf6587fda574a5$var$replaceGTE0","$bOIYX","rangeMap","Map","comp1","$fadf6587fda574a5$var$isNullSet","size","has","delete","some","thisComparators","$fadf6587fda574a5$var$isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","$fadf6587fda574a5$var$testSet","range1","c","first","$fadf6587fda574a5$var$isAny","max","comparators","remainingComparators","testComparator","pop","otherComparator","$fadf6587fda574a5$var$replaceCarets","$fadf6587fda574a5$var$replaceTildes","$fadf6587fda574a5$var$replaceXRanges","$fadf6587fda574a5$var$replaceStars","$fadf6587fda574a5$var$isX","toLowerCase","comp2","$fadf6587fda574a5$var$replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","comp3","$fadf6587fda574a5$var$replaceCaret","CARETLOOSE","CARET","z","comp4","$fadf6587fda574a5$var$replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","allowed","$475ce8414a7d960b$var$MAX","$475ce8414a7d960b$var$LENGTH","$475ce8414a7d960b$var$LENGTH_CALCULATOR","$475ce8414a7d960b$var$ALLOW_STALE","$475ce8414a7d960b$var$MAX_AGE","$475ce8414a7d960b$var$DISPOSE","$475ce8414a7d960b$var$NO_DISPOSE_ON_SET","$475ce8414a7d960b$var$LRU_LIST","$475ce8414a7d960b$var$CACHE","$475ce8414a7d960b$var$UPDATE_AGE_ON_GET","$475ce8414a7d960b$var$naiveLength","$475ce8414a7d960b$var$get","self","doUse","node","hit","$475ce8414a7d960b$var$isStale","$475ce8414a7d960b$var$del","now","Date","unshiftNode","maxAge","$475ce8414a7d960b$var$trim","walker","tail","prev","removeNode","$475ce8414a7d960b$var$Entry","$475ce8414a7d960b$var$forEachStep","fn","thisp","mL","Infinity","allowStale","mA","lengthCalculator","lC","forEach","itemCount","rforEach","toArray","reset","$6Z9O0","dump","h","dumpLru","len","item","unshift","peek","del","load","arr","l","expiresAt","prune","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","$51600bc0fd2580cf$var$Yallist","arguments","$51600bc0fd2580cf$var$insert","inserted","$51600bc0fd2580cf$var$Node","$51600bc0fd2580cf$var$push","$51600bc0fd2580cf$var$unshift","Node","create","pushNode","res","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","toArrayReverse","sliceReverse","splice","start","deleteCount","nodes","reverse","Yallist","iterator","versions","maxSV","rangeObj","min","minSV","minver","setMin","comparator","compver","$54ab3ca106d7a891$var$ANY","hilo","gtfn","ltefn","ltfn","ecomp","$1ZURg","high","low","$7gGOp","r1","r2","ranges","min1","simplified","original","$fd8529902abef076$var$ANY","$fd8529902abef076$var$simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","$fd8529902abef076$var$higherGT","$fd8529902abef076$var$lowerLT","add","needDomLTPre","needDomGTPre","c1","sawNonNull","OUTER","simpleSub","simpleDom","isSub","$4b859a06d7c035c5$var$id","$4b859a06d7c035c5$var$subscribers","$4b859a06d7c035c5$export$bef1f36f5486a6a3","obj","date","console","$4b859a06d7c035c5$var$dispatch","__ledgerLogsListen","cb","indexOf"],"version":3,"file":"TransportWebHID.884bd057.js.map"}